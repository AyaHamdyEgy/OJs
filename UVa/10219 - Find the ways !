#include <iostream>
#include <vector>
#include <math.h>
#include <algorithm>

using namespace std;

vector <int> primes;

long long fac_primePow(long long n, long long p)
{
    long long pow=0;
    for(long long i = p ; i<=n ; i*=p)
        pow+=(n/i);
    return pow;
}

double C(int n,int k)
{
    double res=0;
    for(int j = 0 ; j<(int)primes.size() ; j++)
    {
        int i = primes[j];
        if(i<=n)
        {
            long long x = fac_primePow(n,i)-fac_primePow(k,i)-fac_primePow(n-k,i);
            res += (x*log10(i));
        }
        else break;
    }
    return res;
}
int main()
{
    vector <int> p(100000001,1);
    for(int i = 2; i<=100000000 ; i++)
    {
        if(p[i])
        {
            primes.push_back(i);
            for(int j = i+i ; j<=100000000 ; j+=i) p[j]=0;
        }
    }

    int n,k,d;
    while(cin >> n >> k)
    {
        d = (floor)(C(n,k));
        cout << d+1 << "\n";
    }
    return 0;
}
