#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int color[301];
vector <vector <int> > adj;

bool isP(int s)
{
    queue <int> q;
    q.push(s); color[s]=0;

    bool p=1;
    while(!q.empty() && p)
    {
        int u=q.front(); q.pop();
        for(int i = 0 ; i < (int)adj[u].size() ; i++)
        {
            int child=adj[u][i];
            if(color[child]==-1)
            {
                color[child]=1-color[u];
                q.push(child);
            }
            else if(color[child]==color[u])
            {
                p=0;
                break;
            }
        }
    }
    return p;
}

int main()
{
    int v,a,b;
    while(cin >> v && v)
    {
        adj = vector <vector<int> >(v+1);
        while(cin >> a >> b && (a|b))
        {
            adj[a].push_back(b);
            adj[b].push_back(a);
        }

        bool p=1;
        memset(color,-1,sizeof(color));
        for(int i = 0 ; i < v ; i++)
        {
            if(color[i]==-1) p&=isP(i);
        }
        if(p) cout << "YES\n";
        else cout << "NO\n";

    }
    return 0;
}
