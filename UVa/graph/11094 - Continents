#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int m,n,cnt,X,Y;
char c;
string s[20];
bool vis[20][20];
int dx[]={1,0,0,-1};
int dy[]={0,1,-1,0};

void dfs(int i,int j)
{
    if(i<0 || i>=m || s[i][j]!=c) return;
    if(i==X && j==Y)
    {
        cnt=-1e4;
        return;
    }

    vis[i][j]=1;
    cnt++;

    for(int d=0; d<4 ; d++)
    {
        int x=i+dx[d];
        int y=(j+dy[d]+n)%n;
        if(!vis[x][y]) dfs(x,y);
    }
}

int main()
{
    int x,y;
    while(cin >> m >> n)
    {
        for(int i = 0 ; i < m ; i++) cin >> s[i];
        cin >> X >> Y;
        int mx=0;
        memset(vis,0,sizeof(vis));

        c=s[X][Y];
        for(int i = 0 ; i < m ; i++)
        {
            for(int j = 0 ; j < n ; j++)
            {
                if(s[i][j]==c && !vis[i][j])
                {
                    cnt=0;
                    dfs(i,j);
                    mx=max(mx,cnt);
                }
            }
        }
        cout << mx << "\n";
    }
    return 0;
}
