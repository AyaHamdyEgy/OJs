#include <iostream>
#include <bits/stdc++.h>

using namespace std;

vector <vector<int> > adj;
bool vis[101];
vector <int> ans;

void dfs(int s)
{
    vis[s]=1;

    for(int i = 0 ; i < adj[s].size() ; i++)
    {
        int child=adj[s][i];
        if(!vis[child]) dfs(child);
    }

    ans.push_back(s);
}

int main()
{
    int n,m,u,v;
    while(cin >> n >> m && (n|m))
    {
        adj=vector <vector<int> >(n+1);
        for(int i = 0 ; i < m ; i++)
        {
            cin >> u >> v;
            adj[u].push_back(v);
        }

        ans=vector <int>();
        memset(vis,0,sizeof(vis));

        for(int i = 1 ; i <= n ; i++)
        {
            if(!vis[i]) dfs(i);
        }
        for(int i = n-1 ; i>=0 ; i--)
        {
            cout << ans[i];
            if(i!=0) cout << ' ';
        }
        cout << "\n";
    }
    return 0;
}
