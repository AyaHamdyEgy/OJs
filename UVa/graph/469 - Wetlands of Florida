#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int n,m,cnt;
bool vis[100][100];
string s[100];
int dx[]={1,1,1,0,0,-1,-1,-1};
int dy[]={-1,0,1,-1,1,-1,0,1};

void dfs(int i,int j)
{
    if(i<0 || i>=n || j<0 || j>=m || s[i][j]=='L') return;

    vis[i][j]=1;
    cnt++;

    for(int d = 0 ; d < 8 ; d++)
    {
        int r=i+dx[d];
        int c=j+dy[d];
        if(!vis[r][c]) dfs(r,c);
    }
}

int main()
{
    int T,i,j; cin >> T;
    char c[100];
    gets(c);
    gets(c);

    while(T--)
    {
        n=0;
        while(gets(c) && (c[0]=='L' || c[0]=='W'))
        {
            s[n]=c;
            n++;
        }

        m=s[0].length();
        while(c[0]>='0' && c[0]<='9')
        {
            stringstream ss;
            ss << c;
            ss >> i >> j;
            cnt=0; i--; j--;
            if(s[i][j]=='W')
            {
                memset(vis,0,sizeof(vis));
                dfs(i,j);
            }
            cout << cnt << "\n";
            if(gets(c)) continue;
            else break;
        }
        if(T) cout << "\n";
    }
    return 0;
}
